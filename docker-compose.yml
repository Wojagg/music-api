services:
  auth:
    build:
      dockerfile: music-auth.Dockerfile
      context: ./
    depends_on:
      - mongo
      - redis
    ports:
      - '3001:3001'
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      CACHE_PASS: ${CACHE_PASS}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USERNAME: ${DB_USERNAME}
      DB_NAME: ${DB_NAME}
  api:
    build:
      dockerfile: ./music-service.Dockerfile
      context: ./
    depends_on:
      - mongo
      - redis
    ports:
      - '3000:3000'
      - '4000:4000'
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      CACHE_PASS: ${CACHE_PASS}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USERNAME: ${DB_USERNAME}
      DB_NAME: ${DB_NAME}
  mongo:
    image: mongo:latest
    container_name: ${DB_HOST}
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    ports:
      - ${DB_PORT}:${DB_PORT}
    command: mongod
    volumes:
      - ./infrastructure/mongo/:/docker-entrypoint-initdb.d
      - dbPersistentVolume:/data/db
  redis:
    build:
      dockerfile: ./redis.Dockerfile
      context: ./
      args:
        CACHE_PASS: ${CACHE_PASS}
        CACHE_USER: ${CACHE_USER}
    ports:
      - ${CACHE_PORT}:${CACHE_PORT}

volumes:
  dbPersistentVolume:

